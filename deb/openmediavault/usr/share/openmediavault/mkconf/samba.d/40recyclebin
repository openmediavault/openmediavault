#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2018 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://www.samba.org/samba/docs/man/Samba-HOWTO-Collection/VFS.html#id2651247
# http://www.redhat.com/advice/tips/sambatrash.html

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_SAMBA_SHARE_RECYCLE_REPOSITORY=${OMV_SAMBA_SHARE_RECYCLE_REPOSITORY:-".recycle"}
OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT=${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT:-"/etc/cron.daily/openmediavault-samba-recycle"}
OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK=${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK:-"755"}
OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX=${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX:-"samba-recycle-"}

# Create the rsync cron jobs. Each job is configured in a seperate script.
mkdir -p ${OMV_CRONSCRIPTS_DIR}
find "${OMV_CRONSCRIPTS_DIR}" -type f -iname "${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX}*" -print0 | xargs -0r rm -f

[ "$(omv_config_get "//services/smb/enable")" != "1" ] && exit 0

# Create the script that purges the shared folder recylce bin.
xmlstarlet sel -t \
  -m "//services/smb/shares/share[recyclebin='1']" \
    -v "concat(uuid,' ',sharedfolderref,' ',recyclemaxage)" -n \
  -b \
  ${OMV_CONFIG_FILE} | xmlstarlet unesc |
  while read uuid sharedfolderref recyclemaxage; do
	  filename="${OMV_CRONSCRIPTS_DIR}/${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX}${uuid}"
	  lockfile="/run/${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX}${uuid}"
	  sfpath=$(omv_get_sharedfolder_path "${sharedfolderref}")
	  recyclerepository="${sfpath}/${OMV_SAMBA_SHARE_RECYCLE_REPOSITORY}"
	  amin=$((${recyclemaxage} * 24 * 60))

	  cat <<EOF > ${filename}
#!/bin/sh
# This configuration file is auto-generated.
# WARNING: Do not edit this file, your changes will be lost.
set -e
amin=${amin}
while getopts 'f' option
do
	case \${option} in
	f)
		amin=1 # Force deletion
		;;
	esac
done
# Exit if 'recyclemaxage' is zero.
[ "\${amin}" -eq "0" ] && exit 0
# Exit if another job is running.
[ -e ${lockfile} ] && exit 0
# Create lock
mkdir "${lockfile}" &>/dev/null
# Initialize the trap to cleanup on exit.
trap "rm -rf ${lockfile}; exit" 0 1 2 5 15
# Exit if the recycle bin directory does not exist.
[ ! -e "${recyclerepository}" ] && exit 0
echo "Please wait, empty recyle bin of <$sfpath> ..."
find "${recyclerepository}" -mindepth 1 -amin +\${amin} -print0 | xargs -0r rm -rfv
# Do a second run to remove empty directories.
find "${recyclerepository}" -mindepth 1 -type d -empty -print0 | xargs -0r rm -rfv
EOF
	  chmod ${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK} ${filename}
  done

# Create the cron script itself.
cat <<EOF > ${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT}
#!/bin/sh
# This configuration file is auto-generated.
# WARNING: Do not edit this file, your changes will be lost.
set -e
run-parts --regex='${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT_PREFIX}*' ${OMV_CRONSCRIPTS_DIR} &>/dev/null
EOF
chmod 755 ${OMV_SAMBA_SHARE_RECYCLE_CRONSCRIPT}
