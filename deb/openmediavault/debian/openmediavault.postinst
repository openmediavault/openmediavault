#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2020 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions
. /usr/share/debconf/confmodule

OMV_CACHE_DIR=${OMV_CACHE_DIR:-"/var/cache/openmediavault"}
OMV_WEBGUI_FILE_OWNERGROUP_NAME=${OMV_WEBGUI_FILE_OWNERGROUP_NAME:-"openmediavault-webgui"}
OMV_DPKGARCHIVE_DIR=${OMV_DPKGARCHIVE_DIR:-"/var/cache/openmediavault/archives"}

case "$1" in
	configure)
		########################################################################
		# Set the default settings when the package is installed the first time.
		########################################################################
		if [ -z "$2" ]; then
			####################################################################
			# Create various users/groups.
			####################################################################
			echo "Creating users/groups ..."
			####################################################################
			# Create the group 'openmediavault-config' which is only allowed
			# to access the configuration database.
			####################################################################
			if ! omv_group_id_exists openmediavault-config; then
				groupadd --system openmediavault-config
			fi
			####################################################################
			# Create the group 'openmediavault-engined' which is used to
			# allow group members to execute RPC's.
			####################################################################
			if ! omv_group_id_exists openmediavault-engined; then
				groupadd --system openmediavault-engined
			fi
			####################################################################
			# Create the user/group 'openmediavault-webgui' which is used to
			# run the web interface.
			####################################################################
			if ! omv_user_id_exists openmediavault-webgui; then
				useradd --system --user-group --no-create-home \
					--groups openmediavault-config,openmediavault-engined \
					--shell '/usr/sbin/nologin' \
					--comment 'openmediavault WebGUI Management' \
					openmediavault-webgui
			fi
			####################################################################
			# Create the user 'admin' which is used as the web interface
			# administrator account. Default password is 'openmediavault'.
			####################################################################
			if ! omv_user_id_exists admin; then
				useradd --system --no-user-group --no-create-home \
					--password '$1$PjiW4uIZ$agjyA0foLeAcHClwOuad1.' \
					--shell '/usr/sbin/nologin' \
					--comment 'openmediavault WebGUI Administrator' \
					admin
			fi

			####################################################################
			# Create various required files.
			####################################################################
			touch /var/log/tallylog

			####################################################################
			# Setup various file permissions.
			####################################################################
			# Allow the web interface to read/write cached files.
			chmod 775 "${OMV_CACHE_DIR}"
			chown ":${OMV_WEBGUI_FILE_OWNERGROUP_NAME}" "${OMV_CACHE_DIR}"

			####################################################################
			# Update the local plugin packages archive. The 'packages' command
			# should be run in the root of the tree.
			####################################################################
			echo "Updating local package archive ..."
			cd "${OMV_DPKGARCHIVE_DIR}" && apt-ftparchive packages . > Packages

			####################################################################
			# Setup all services.
			####################################################################
			echo "Updating service units ..."
			# Stop/Disable various services.
			deb-systemd-helper disable chrony.service
			deb-systemd-invoke stop chrony.service || :
			deb-systemd-helper disable smartmontools.service
			deb-systemd-invoke stop smartmontools.service || :
			deb-systemd-helper disable rsync.service
			deb-systemd-invoke stop rsync.service || :
			deb-systemd-helper disable proftpd.service
			deb-systemd-invoke stop proftpd.service || :
			deb-systemd-helper disable nfs-kernel-server.service
			deb-systemd-invoke stop nfs-kernel-server.service || :
			deb-systemd-helper disable smbd.service
			deb-systemd-invoke stop smbd.service || :
			deb-systemd-helper disable nmbd.service
			deb-systemd-invoke stop nmbd.service || :
			deb-systemd-helper disable postfix.service
			deb-systemd-invoke stop postfix.service || :
			# The salt-minion service does not need to be running when
			# running a masterless minion setup.
			deb-systemd-invoke stop salt-minion.service || :

			# Enable/Start various services.
			deb-systemd-helper enable systemd-networkd.service
			deb-systemd-invoke start systemd-networkd.service || :
			deb-systemd-helper enable systemd-resolved.service
			deb-systemd-invoke start systemd-resolved.service || :
		fi

		# Create public/private SSH key pair for user root.
		if [ ! -e "/root/.ssh/id_rsa" ]; then
			ssh-keygen -t rsa -N "" -f /root/.ssh/id_rsa
		fi

		# Ensure all openmediavault systemd units are enabled.
		deb-systemd-helper enable openmediavault-beep-up.service
		deb-systemd-helper enable openmediavault-beep-down.service
		deb-systemd-helper enable openmediavault-cleanup-monit.service
		deb-systemd-helper enable openmediavault-cleanup-php.service
		deb-systemd-helper enable openmediavault-engined.service
		deb-systemd-helper enable openmediavault-issue.service

		########################################################################
		# Trigger file permission update.
		########################################################################
		dpkg-trigger update-fixperms || :

		########################################################################
		# Trigger locale files creation/update.
		########################################################################
		dpkg-trigger update-locale || :

		########################################################################
		# Migrate configuration database.
		########################################################################
		echo "Creating configuration database ..."
		omv-confdbadm create "conf"
		if [ -n "$2" ]; then
			echo "Migrating configuration database ..."
			omv-confdbadm migrate "conf" "${2}"
		fi

		########################################################################
		# Initialize Salt environment.
		########################################################################
		echo "Setting up Salt environment ..."
		salt-call --local --retcode-passthrough --no-color state.orchestrate \
			omv.stage.prepare >/dev/null

    if [ -z "$2" ]; then
      ########################################################################
      # Apply default system configuration.
      ########################################################################
      echo "Setting up system ..."
      # Don't use omv-salt here, because the locale is not setup correct.
      salt-call --local --retcode-passthrough --no-color state.orchestrate \
        omv.stage.setup >/dev/null
    fi

		########################################################################
		# Deploy various services when the package is installed the first time.
		########################################################################
		if [ -z "$2" ]; then
			# Disable default nginx site.
			nginx_dissite default || :

			# Deploy the configuration for various services.
			echo "Deploying service configurations ..."
			LANG=C.UTF-8 omv-salt deploy run --quiet mdadm cpufrequtils \
				cronapt watchdog monit rrdcached avahi ssh nginx collectd \
				phpfpm issue sysctl systemd systemd-logind || :
		fi

		########################################################################
		# Action to be done depending on the previous version.
		########################################################################
		echo "Processing system modifications ..."
		if dpkg --compare-versions "$2" lt-nl "5.0"; then
			# The salt-minion service does not need to be running when
			# running a masterless minion setup.
			deb-systemd-invoke stop salt-minion.service || :
			# Use chrony instead of ntp. Make sure all services are disabled.
			# Finally enable chrony if necessary.
			deb-systemd-helper disable ntp.service
			deb-systemd-invoke stop ntp.service || :
			# Deploy various services.
			# - collectd: uptime plugin has been added
			# - chrony: The ntp replacement
			# - postfix: Config must be recreated
			omv-salt deploy run --quiet collectd chrony postfix
		fi
		if dpkg --compare-versions "$2" lt-nl "5.1.3"; then
		  omv-salt deploy run --quiet monit
		fi

		########################################################################
		# Trigger the restart of the omv-engined daemon to load and use the
		# latest configuration database.
		########################################################################
		dpkg-trigger restart-engined || :

		########################################################################
		# Show help text.
		########################################################################
		db_input high openmediavault/run-initsystem || :
		db_go
		db_stop
	;;

	triggered)
		########################################################################
		# Execute triggers
		########################################################################
		for trigger in $2; do
			case "${trigger}" in
				update-locale)
					echo "Updating locale files ..."
					omv_install_locale
				;;

				update-fixperms)
					# Update the file permissions of new installed files.
					echo "Updating file permissions ..."
					omv_install_fixperms
					# Purge cached files. In most cases this is necessary
					# because Debian package updates may install or remove
					# files.
					echo "Purging internal cache ..."
					omv_purge_internal_cache
				;;

				restart-engined)
					echo "Restarting engine daemon ..."
					monit restart omv-engined || ( \
						deb-systemd-helper unmask openmediavault-engined.service; \
						deb-systemd-invoke restart openmediavault-engined.service)
				;;
			esac
		done
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument '$1'" >&2
		exit 1
	;;
esac

exit 0
